<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
<?php


$library = [
    "Fiction" => [
        "Fantasy" => ["Harry Potter", "The Hobbit"],
        "Mystery" => ["Sherlock Holmes", "Gone Girl"]
    ],
    "Non-Fiction" => [
        "Science" => ["A Brief History of Time", "The Selfish Gene"],
        "Biography" => ["Steve Jobs", "Becoming"]
    ]
];

function displayLibrary($library, $indent = 0) {
    foreach ($library as $key => $value) {
        echo str_repeat("&nbsp;&nbsp;", $indent) . $key . "<br>";
        
        if (is_array($value)) {
            displayLibrary($value, $indent + 1);
        }
    }
}


$bookInfo = [
    "Harry Potter" => ["author" => "J.K. Rowling", "year" => 1997, "genre" => "Fantasy"],
    "The Hobbit" => ["author" => "J.R.R. Tolkien", "year" => 1937, "genre" => "Fantasy"],
    "Sherlock Holmes" => ["author" => "Arthur Conan Doyle", "year" => 1892, "genre" => "Mystery"],
    "Gone Girl" => ["author" => "Gillian Flynn", "year" => 2012, "genre" => "Mystery"],
    "A Brief History of Time" => ["author" => "Stephen Hawking", "year" => 1988, "genre" => "Science"],
    "The Selfish Gene" => ["author" => "Richard Dawkins", "year" => 1976, "genre" => "Science"],
    "Steve Jobs" => ["author" => "Walter Isaacson", "year" => 2011, "genre" => "Biography"],
    "Becoming" => ["author" => "Michelle Obama", "year" => 2018, "genre" => "Biography"]
];

function getBookInfo($title, $bookInfo) {
    if (isset($bookInfo[$title])) {
        echo "Title: $title<br>";
        echo "Author: " . $bookInfo[$title]['author'] . "<br>";
        echo "Year: " . $bookInfo[$title]['year'] . "<br>";
        echo "Genre: " . $bookInfo[$title]['genre'] . "<br><br>";
    } else {
        echo "Book not found.<br><br>";
    }
}



class Node {
    public $data;
    public $left;
    public $right;
    public function __construct($data) {
        $this->data = $data;
        $this->left = null;
        $this->right = null;
    }
}

class BinarySearchTree {
    public $root;
    public function __construct() {
        $this->root = null;
    }

    public function insert($data) {
        $this->root = $this->insertRec($this->root, $data);
    }

    private function insertRec($node, $data) {
        if ($node == null) {
            $node = new Node($data);
            return $node;
        }
        if ($data < $node->data) {
            $node->left = $this->insertRec($node->left, $data);
        } else {
            $node->right = $this->insertRec($node->right, $data);
        }
        return $node;
    }

    public function search($node, $data) {
        if ($node == null) {
            return false;
        }
        if ($node->data == $data) {
            return true;
        }
        if ($data < $node->data) {
            return $this->search($node->left, $data);
        } else {
            return $this->search($node->right, $data);
        }
    }

    public function inorderTraversal($node) {
        if ($node != null) {
            $this->inorderTraversal($node->left);
            echo $node->data . "<br>";
            $this->inorderTraversal($node->right);
        }
    }
}


echo "<h3>Library Structure:</h3>";
displayLibrary($library);


echo "<h3>Book Information:</h3>";
getBookInfo("Harry Potter", $bookInfo);
getBookInfo("Inferno", $bookInfo);


echo "<h3>Binary Search Tree (Inorder Traversal):</h3>";
$bst = new BinarySearchTree();
$books = ["Harry Potter", "The Hobbit", "Sherlock Holmes", "Gone Girl", "Becoming", "A Brief History of Time"];

foreach ($books as $book) {
    $bst->insert($book);
}

$bst->inorderTraversal($bst->root);


echo "<br><h3>Search Results:</h3>";
echo "Searching for 'The Hobbit': " . ($bst->search($bst->root, "The Hobbit") ? "Found!" : "Not Found") . "<br>";
echo "Searching for 'Inferno': " . ($bst->search($bst->root, "Inferno") ? "Found!" : "Not Found") . "<br>";
?>
</body>
</html>
































